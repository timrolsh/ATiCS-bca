; Make sure comments work!
Correct-Answer! ; Comment is here!
           No-Spaces?-Correct-Answer!       
false = \f.\x.x
true = λx.λy.x
and = λp.λq.p q p
run and false false
run and false true
run and true false
run and true true
or = λp.λq.p p q
run or false false
run or false true
run or true false
run or true true
not = λp.p false true
run not false
run not true
xor = \p.\q.p (not q) q
run xor false false
run xor false true
run xor true false
run xor true true
if = λb.λT.λF.((b T) F)
run (if (and true false) WRONG-ANSWER Correct-Answer!)
NUMBER-OPERATIONS
succ = \n.\f.\x.f (n f x)
pred = λn.λf.λx.n (λg.λh.h (g f)) (λu.x) (λu.u)
+ = λm.λn.λf.λx.(m f) ((n f) x)
* = λn.λm.λf.λx.n (m f) x
- = λm.λn.(n pred) m
0 = \f.\x.x    ; same as false
1 = run succ 0
2 = run succ 1
3 = run + 2 1
4 = run * 2 2
5 = (λf.(λx.(f (f (f (f (f x)))))))
6 = run pred (pred (succ (+ 2 5)))
7 = run succ (succ 5)
8 = run - (* 5 2) 2
9 = run (* (pred 4) (- 7 4))
10 = run succ (+ 3 6)
even? = λn.n not true
run (if (even? 2) Correct-Answer! WRONG-ANSWER!)
run (if (even? 1) WRONG-ANSWER Correct-Answer!)
odd? = \x.not (even? x)
run (if (odd? 5) Correct-Answer! WRONG-ANSWER!)
run (if (odd? 6) WRONG-ANSWER Correct-Answer!)
zero? = \n.n (\x.false) true
run (if (zero? (- 2 2)) Correct-Answer! WRONG-ANSWER!)
run (if (zero? (+ 0 1)) WRONG-ANSWER Correct-Answer!)
leq? = \m.\n.zero?(- m n)
run (if (leq? 2 5) Correct-Answer! WRONG-ANSWER!)
run (if (leq? 5 5) Correct-Answer! WRONG-ANSWER!)
run (if (leq? 7 5) WRONG-ANSWER Correct-Answer!)
lt? = \a.\b.not (leq? b a)
run (if (lt? 2 5) Correct-Answer! WRONG-ANSWER!)
run (if (lt? 5 5) WRONG-ANSWER Correct-Answer!)
run (if (lt? 7 5) WRONG-ANSWER Correct-Answer!)
gt? = \a.\b.not (leq? a b)
run (if (gt? 2 5) WRONG-ANSWER Correct-Answer!)
run (if (gt? 5 5) WRONG-ANSWER Correct-Answer!)
run (if (gt? 7 5) Correct-Answer! WRONG-ANSWER!)
eq? = \m.\n.and (leq? m n) (leq? n m)
run (if (eq? 5 5) Correct-Answer! WRONG-ANSWER!)
run (if (eq? 2 5) WRONG-ANSWER Correct-Answer!)
neq? = \a.\b.(not (eq? a b))
run (if (neq? 2 5) Correct-Answer! WRONG-ANSWER!)
run (if (neq? 5 5) WRONG-ANSWER Correct-Answer!)
geq? = \a.\b.(leq? b a)
run (if (geq? 7 5) Correct-Answer! WRONG-ANSWER!)
run (if (geq? 5 5) Correct-Answer! WRONG-ANSWER!)
run (if (geq? 2 5) WRONG-ANSWER Correct-Answer!)
cons = λx.λy.λf.f x y
run (cons A B)
car = λp.p true
run (car (cons Correct-Answer! WRONG-ANSWER!))
cdr = λp.p false
run (cdr (cons WRONG-ANSWER! Correct-Answer!))
null = \x.true
cats = (cons C (cons A (cons T (cons S null))))
run (car cats)
run (car (cdr cats))
run (car (cdr (cdr cats)))
run (car (cdr (cdr (cdr cats))))
null? = λp.p (λx.λy.false)
run (if (null? cats) WRONG-ANSWER! Correct-Answer!)
run (if (null? (cdr (cdr (cdr (cdr cats))))) Correct-Answer! WRONG-ANSWER!)
Y = λf. (λx. f(x x)) (λx. f(x x))
factorial = Y \f.\n.(if (zero? n) 1 (* n (f (- n 1))))
run (if (eq? (factorial 3) 6) Correct-Answer! WRONG-ANSWER!)
divpair = Y (λg.λq.λa.λb. lt? a b (cons q a) (g (succ q) (- a b) b)) 0
run (if (eq? (car (divpair 5 2)) 2) Correct-Answer! WRONG-ANSWER!)
run (if (eq? (cdr (divpair 5 2)) 1) Correct-Answer! WRONG-ANSWER!)
/ = λa.\b. car (divpair a b)
run (if (eq? (/ 9 4) 2) Correct-Answer! WRONG-ANSWER!)
mod = λa.\b. cdr (divpair a b)
run (if (eq? (mod 9 4) 1) Correct-Answer! WRONG-ANSWER!)
